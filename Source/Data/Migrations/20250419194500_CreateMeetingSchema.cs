// <auto-generated />
using Microsoft.EntityFrameworkCore.Migrations;

#nullable disable

namespace VttTools.Data.Migrations;

/// <inheritdoc />
public partial class CreateMeetingSchema : Migration {
    /// <inheritdoc />
    protected override void Up(MigrationBuilder migrationBuilder) {
        migrationBuilder.CreateTable(
            name: "Meetings",
            columns: table => new {
                Id = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                OwnerId = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                Subject = table.Column<string>(type: "nvarchar(100)", maxLength: 100, nullable: false),
                EpisodeId = table.Column<Guid>(type: "uniqueidentifier", nullable: true)
            },
            constraints: table => table.PrimaryKey("PK_Meetings", x => x.Id));

        migrationBuilder.CreateTable(
            name: "MeetingEvents",
            columns: table => new {
                Timestamp = table.Column<DateTimeOffset>(type: "datetimeoffset", nullable: false),
                MeetingId = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                Description = table.Column<string>(type: "nvarchar(1024)", maxLength: 1024, nullable: false)
            },
            constraints: table => {
                table.PrimaryKey("PK_MeetingEvents", x => new { x.MeetingId, x.Timestamp });
                table.ForeignKey(
                    name: "FK_MeetingEvents_Meetings_MeetingId",
                    column: x => x.MeetingId,
                    principalTable: "Meetings",
                    principalColumn: "Id",
                    onDelete: ReferentialAction.Cascade);
            });

        migrationBuilder.CreateTable(
            name: "MeetingMessages",
            columns: table => new {
                SentAt = table.Column<DateTimeOffset>(type: "datetimeoffset", nullable: false),
                MeetingId = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                SentBy = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                SentTo = table.Column<string>(type: "nvarchar(max)", nullable: true),
                Type = table.Column<int>(type: "int", nullable: false),
                Content = table.Column<string>(type: "nvarchar(max)", maxLength: 4096, nullable: false)
            },
            constraints: table => {
                table.PrimaryKey("PK_MeetingMessages", x => new { x.MeetingId, x.SentAt });
                table.ForeignKey(
                    name: "FK_MeetingMessages_Meetings_MeetingId",
                    column: x => x.MeetingId,
                    principalTable: "Meetings",
                    principalColumn: "Id",
                    onDelete: ReferentialAction.Cascade);
            });

        migrationBuilder.CreateTable(
            name: "MeetingPlayers",
            columns: table => new {
                UserId = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                MeetingId = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                Type = table.Column<int>(type: "int", nullable: false)
            },
            constraints: table => {
                table.PrimaryKey("PK_MeetingPlayers", x => new { x.MeetingId, x.UserId });
                table.ForeignKey(
                    name: "FK_MeetingPlayers_Meetings_MeetingId",
                    column: x => x.MeetingId,
                    principalTable: "Meetings",
                    principalColumn: "Id",
                    onDelete: ReferentialAction.Cascade);
            });
    }

    /// <inheritdoc />
    protected override void Down(MigrationBuilder migrationBuilder) {
        migrationBuilder.DropTable(
            name: "MeetingEvents");

        migrationBuilder.DropTable(
            name: "MeetingMessages");

        migrationBuilder.DropTable(
            name: "MeetingPlayers");

        migrationBuilder.DropTable(
            name: "Meetings");
    }
}
