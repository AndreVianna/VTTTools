@page "/adventures"
@using VttTools.WebApp.Shared.Models
@inherits Page<AdventuresPage, AdventuresHandler>
@rendermode InteractiveServer

<PageTitle>Adventures</PageTitle>

<div class="container-fluid">
  <div id="page-header" class="row mb-4">
    <div class="col-md-6">
      <h1>Adventures</h1>
    </div>
    <div class="col-md-6 d-flex justify-content-md-end align-items-center">
      <button id="create-adventure-button" class="btn btn-primary me-2" @onclick="GoToCreatePage">
        <span class="icon create me-1" aria-hidden="true"></span>
        Create
      </button>
      <div class="btn-group" role="group">
        <button type="button" class="btn @(State.ListViewMode == ListViewMode.List ? "btn-primary" : "btn-outline-primary")" @onclick="() => Handler.ToggleViewMode()" title="List View">
          <span class="icon list" aria-hidden="true"></span>
        </button>
        <button type="button" class="btn @(State.ListViewMode == ListViewMode.Card ? "btn-primary" : "btn-outline-primary")" @onclick="() => Handler.ToggleViewMode()" title="Card View">
          <span class="icon grid" aria-hidden="true"></span>
        </button>
      </div>
    </div>
  </div>

  <div class="row mb-4">
    <div class="col-md-8">
      <div class="input-group">
        <input type="text" class="form-control" placeholder="Search adventures..."
          @bind="State.SearchText" @bind:event="oninput" @onkeyup="ApplySearch" />
        <button class="btn btn-sm btn-outline-secondary" type="button" @onclick="ClearSearch">
          <span class="icon close" aria-hidden="true"></span>
        </button>
      </div>
    </div>
    <div class="col-md-4">
      <select class="form-select" @bind="State.FilterType" @bind:after="ApplyTypeFilter">
        <option value="">All Adventure Types</option>
        @foreach (var type in Enum.GetValues<AdventureType>()) {
          <option value="@type">@type.ToString()</option>
        }
      </select>
    </div>
  </div>

  @if (!IsReady) {
    <div id="loading-message" class="d-flex justify-content-center">
      <div class="spinner-border" role="status">
        <span class="visually-hidden">Loading...</span>
      </div>
    </div>
  }
  else {
    <!-- Owned Adventures Section -->
    <div class="mb-5">
      <h2>My Adventures</h2>
    @if (State.OwnedAdventures.Count == 0) {
      <div id="no-owned-adventures" class="alert alert-info">
        You don't have any adventures yet. Create a new one to get started!
      </div>
    }
    else if (State.ListViewMode == ListViewMode.List) {
      <div class="table-responsive">
        <table id="owned-adventures-table" class="table table-hover">
          <thead>
            <tr>
              <th scope="col" class="col" id="owned-adventures-name-header">Name</th>
                <th scope="col" class="col-2" id="owned-adventures-status-header">Status</th>
                <th scope="col" class="col-2" id="owned-adventures-type-header">Type</th>
              <th scope="col" class="col-1" id="owned-adventures-scenes-header">Scenes</th>
              <th scope="col" class="col-1" id="owned-adventures-action-header">Actions</th>
            </tr>
          </thead>
          <tbody>
            @foreach (var adv in State.OwnedAdventures) {
              <tr>
                <td class="align-middle" id="@($"adventure-{adv.Id}-name")">@adv.Name</td>
                <td class="align-middle" id="@($"adventure-{adv.Id}-status")">
                  <span class="badge bg-@(adv.IsPublished ? "success" : "secondary") me-1">@(adv.IsPublished ? "Published" : "Draft")</span>
                  <span class="badge bg-@(adv.IsPublic ? "info" : "warning") me-1">@(adv.IsPublic ? "Public" : "Private")</span>
                </td>
                <td class="align-middle" id="@($"adventure-{adv.Id}-type")">@adv.Type.ToString()</td>
                <td class="align-middle" id="@($"adventure-{adv.Id}-scenes")">
                  @(adv.ScenesCount == 0 ? "no" : adv.ScenesCount) scene@(adv.ScenesCount > 1 ? "s" : "")
                </td>
                <td class="align-middle" id="@($"adventure-{adv.Id}-actions")">
                  <button id="@($"edit-adventure-{adv.Id}")" class="btn btn-icon icon-primary me-1"
                          @onclick='@(() => RedirectTo($"/adventure/edit/{adv.Id}"))' title="Edit Adventure">
                    <span class="icon edit" aria-hidden="true"></span>
                  </button>
                  <button id="@($"clone-adventure-{adv.Id}")" class="btn btn-icon icon-primary me-1"
                          @onclick='@(() => RedirectTo($"/adventure/clone/{adv.Id}"))' title="Clone Adventure">
                    <span class="icon clone" aria-hidden="true"></span>
                  </button>
                  <button id="@($"delete-adventure-{adv.Id}")" class="btn btn-icon icon-danger"
                          @onclick="() => DeleteAdventure(adv.Id)" title="Delete Adventure">
                    <span class="icon delete" aria-hidden="true"></span>
                  </button>
                </td>
              </tr>
            }
          </tbody>
        </table>
      </div>
    }
    else {
      <div class="row row-cols-1 row-cols-md-2 row-cols-lg-3 g-4" id="owned-adventures-cards">
        @foreach (var adv in State.OwnedAdventures) {
          <div class="col">
            <div class="card h-100">
              <div class="card-header" style="@(string.IsNullOrEmpty(adv.ImageUrl) ? null : $"background-image: url('{adv.ImageUrl}');")">
                <div class="d-flex justify-content-between align-items-center">
                  <h5>@adv.Name</h5>
                  <div class="btn-group btn-group-sm" role="group">
                    <button id="@($"edit-adventure-{adv.Id}")" class="btn btn-icon icon-primary me-1"
                            @onclick='@(() => RedirectTo($"/adventure/edit/{adv.Id}"))' title="Edit Adventure">
                      <span class="icon edit" aria-hidden="true"></span>
                    </button>
                    <button id="@($"clone-adventure-{adv.Id}")" class="btn btn-icon icon-primary me-1"
                            @onclick='@(() => RedirectTo($"/adventure/clone/{adv.Id}"))' title="Clone Adventure">
                      <span class="icon clone" aria-hidden="true"></span>
                    </button>
                    <button id="@($"delete-adventure-{adv.Id}")" class="btn btn-icon icon-danger"
                            @onclick="() => DeleteAdventure(adv.Id)" title="Delete Adventure">
                      <span class="icon delete" aria-hidden="true"></span>
                    </button>
                  </div>
                </div>
              </div>
              <div class="card-body">
                <div class="card-title d-flex mb-1 align-items-center">
                  <span class="badge bg-@(adv.IsPublished ? "success" : "secondary") me-1">@(adv.IsPublished ? "Published" : "Draft")</span>
                  <span class="badge bg-@(adv.IsPublic ? "info" : "warning") me-1">@(adv.IsPublic ? "Public" : "Private")</span>
                  @adv.Type.ToString() (@(adv.ScenesCount == 0 ? "no" : adv.ScenesCount) scene@(adv.ScenesCount > 1 ? "s" : ""))
                </div>
                <p class="card-text">@adv.Description</p>
              </div>
            </div>
          </div>
        }
      </div>
    }
    </div>
    <!-- Public Adventures Section -->
    <div>
      <h2>Public Adventures</h2>
    @if (State.PublicAdventures.Count == 0) {
      <div id="no-public-adventures" class="alert alert-info">
        No public adventures available.
      </div>
    }
    else if (State.ListViewMode == ListViewMode.List) {
      <div class="table-responsive">
        <table id="public-adventures-table" class="table table-hover">
          <thead>
            <tr>
              <th scope="col" id="public-adventures-name-header">Name</th>
              <th scope="col" class="col-2" id="public-adventures-type-header">Type</th>
              <th scope="col" class="col-1" id="public-adventures-scenes-header">Scenes</th>
              <th scope="col" class="col-1" id="public-adventures-action-header">Actions</th>
            </tr>
          </thead>
          <tbody>
            @foreach (var adv in State.PublicAdventures) {
              <tr>
                <td class="align-middle" id="@($"adventure-{adv.Id}-name")">@adv.Name</td>
                <td class="align-middle" id="@($"adventure-{adv.Id}-type")">@adv.Type.ToString()</td>
                <td class="align-middle" id="@($"adventure-{adv.Id}-scenes")">@(adv.ScenesCount == 0 ? "no" : adv.ScenesCount) scene@(adv.ScenesCount > 1 ? "s" : "")</td>
                <td class="align-middle" id="@($"adventure-{adv.Id}-actions")">
                  <button id="@($"view-adventure-{adv.Id}")" class="btn btn-icon icon-primary me-1"
                          @onclick='@(() => RedirectTo($"/adventure/view/{adv.Id}"))' title="View Adventure">
                    <span class="icon view" aria-hidden="true"></span>
                  </button>
                  <button id="@($"clone-adventure-{adv.Id}")" class="btn btn-icon icon-primary"
                          @onclick='() => RedirectTo($"/adventure/clone/{adv.Id}")' title="Clone Adventure">
                    <span class="icon clone" aria-hidden="true"></span>
                  </button>
                </td>
              </tr>
            }
          </tbody>
        </table>
      </div>
    }
    else {
      <div class="row row-cols-1 row-cols-md-2 row-cols-lg-3 g-4" id="public-adventures-cards">
        @foreach (var adv in State.PublicAdventures) {
          <div class="col">
            <div class="card h-100">
              <div class="card-header" style="@(string.IsNullOrEmpty(adv.ImageUrl) ? null : $"background-image: url('{adv.ImageUrl}');")">
                <div class="d-flex justify-content-between align-items-center">
                  <h5>@adv.Name</h5>
                  <div class="btn-group btn-group-sm" role="group">
                    <button id="@($"view-adventure-{adv.Id}")" class="btn btn-icon icon-primary me-1"
                            @onclick='@(() => RedirectTo($"/adventure/view/{adv.Id}"))' title="View Adventure">
                      <span class="icon view" aria-hidden="true"></span>
                    </button>
                    <button id="@($"clone-adventure-{adv.Id}")" class="btn btn-icon icon-primary"
                            @onclick='@(() => RedirectTo($"/adventure/clone/{adv.Id}"))' title="Clone Adventure">
                      <span class="icon clone" aria-hidden="true"></span>
                    </button>
                  </div>
                </div>
              </div>
              <div class="card-body">
                <div class="card-title d-flex mb-1 align-items-center">
                  @adv.Type.ToString() (@(adv.ScenesCount == 0 ? "no" : adv.ScenesCount) scene@(adv.ScenesCount > 1 ? "s" : ""))
                </div>
                <p class="card-text">@adv.Description</p>
              </div>
            </div>
          </div>
        }
      </div>
    }
    </div>
  }
</div>

