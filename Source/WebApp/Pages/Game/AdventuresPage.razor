@page "/adventures"
@inherits ExtendedComponent<AdventuresPageHandler>
@rendermode InteractiveAuto

<PageTitle>Adventures</PageTitle>

<div class="container">
  <div id="page-header" class="row mb-4">
    <div class="col">
      <h1>Adventures</h1>
    </div>
  </div>
@if (!IsReady) {
  <div id="loading-message" class="d-flex justify-content-center">
    <div class="spinner-border" role="status">
      <span class="visually-hidden">Loading...</span>
    </div>
  </div>
}
  <EditForm Model="CreateInput" FormName="create" id="adventure-create-form" OnValidSubmit="CreateAdventure" method="post">
    <DataAnnotationsValidator />
    <ValidationSummary class="text-danger" role="alert" />
    <div class="form-floating mb-3">
      <InputText @bind-Value="CreateInput.Name" id="name-input" class="form-control mb-1" placeholder="Name" />
      <label for="name-input" class="form-label">@nameof(Adventure.Name)</label>
      <ValidationMessage For="() => CreateInput.Name" class="text-danger" />
    </div>
    <button id="create-adventure" type="submit" class="btn btn-primary">Create</button>
  </EditForm>
  @if (State.Adventures.Count == 0) {
  <div id="no-items-message" class="alert alert-info">
    You don't have any adventures yet. Create a new one to get started!
  </div>
  }
  else {
  <table id="adventures-table" class="table">
  <thead>
    <tr>
      <th id="adventures-name-header">@nameof(Adventure.Name)</th>
      <th id="adventures-visibility-header">@nameof(Adventure.Visibility)</th>
      <th id="adventures-action-header">Actions</th>
    </tr>
  </thead>
  <tbody>
  @foreach (var adventure in State.Adventures) {
    <tr>
      <td id="@($"adventure-{adventure.Id}-name")">@adventure.Name</td>
      <td id="@($"adventure-{adventure.Id}-visibility")">@adventure.Visibility</td>
      <td id="@($"adventure-{adventure.Id}-actions")">
        <button id="@($"view-adventure-{adventure.Id}")" class="btn btn-secondary btn-sm me-1" @onclick='() => NavigateTo($"/adventures/{adventure.Id}/episodes")'>Episodes</button>
        <button id="@($"edit-adventure-{adventure.Id}")" class="btn btn-secondary btn-sm me-1" @onclick="() => ShowEditDialog(adventure)">Edit</button>
        <button id="@($"clone-adventure-{adventure.Id}")" class="btn btn-info btn-sm me-1" @onclick="() => CloneAdventure(adventure.Id)">Clone</button>
        <button id="@($"delete-adventure-{adventure.Id}")" class="btn btn-danger btn-sm" @onclick="() => DeleteAdventure(adventure.Id)">Delete</button>
      </td>
    </tr>
  }
  </tbody>
  </table>
  }
}

@if (IsReady && State.IsEditing) {
  <div id="edit-adventure-dialog" class="modal fade show" style="display: block;" tabindex="-1">
    <div class="modal-dialog">
      <div class="modal-content">
      <EditForm Model="EditInput" FormName="edit" id="edit-adventure-form" OnValidSubmit="SaveEdit" method="post">
        <div class="modal-header">
          <h5 class="modal-title">Edit Adventure</h5>
          <button id="edit-adventure-dialog-close" adventureid="button" class="btn-close" @onclick="HideEditDialog"></button>
        </div>
        <div class="modal-body">
          <DataAnnotationsValidator />
          <ValidationSummary class="text-danger" role="alert" />
          <div class="form-floating mb-3">
            <InputText @bind-Value="EditInput.Name" id="edit-adventure-name-input" class="form-control mb-1" placeholder="Name" />
            <label for="edit-adventure-name-input" class="form-label">@nameof(Adventure.Name)</label>
            <ValidationMessage For="() => EditInput.Name" class="text-danger" />
          </div>
          <div class="form-floating mb-3">
            <InputSelect @bind-Value="EditInput.Visibility" id="edit-adventure-visibility-input" class="form-select mb-1">
              <option value="@Visibility.Hidden">Hidden</option>
              <option value="@Visibility.Private">Private</option>
              <option value="@Visibility.Public">Public</option>
            </InputSelect>
            <label for="edit-adventure-visibility-input" class="form-label">@nameof(Adventure.Visibility)</label>
            <ValidationMessage For="() => EditInput.Visibility" class="text-danger" />
          </div>
        </div>
        <div class="modal-footer">
          <button id="edit-adventure-cancel" type="button" class="btn btn-secondary" @onclick="HideEditDialog">Cancel</button>
          <button id="edit-adventure-submit" type="submit" class="btn btn-primary">Edit</button>
        </div>
      </EditForm>
      </div>
    </div>
  </div>
  <div class="modal-backdrop fade show"></div>
}
</div>
