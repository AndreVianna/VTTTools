@page "/meetings"
@inherits ExtendedComponent
@rendermode InteractiveAuto

<PageTitle>Game Meetings</PageTitle>

<div class="container">
    <div class="row mb-4">
        <div class="col">
            <h1>Game Meetings</h1>
        </div>
        <div class="col-auto">
            <button class="btn btn-primary" @onclick="OpenCreateMeetingDialog">Create New Meeting</button>
        </div>
    </div>

    @if (State == null)
    {
        <div class="d-flex justify-content-center">
            <div class="spinner-border" role="status">
                <span class="visually-hidden">Loading...</span>
            </div>
        </div>
    }
    else if (!State.Meetings.Any())
    {
        <div class="alert alert-info">
            You don't have any game meetings yet. Create a new meeting to get started!
        </div>
    }
    else
    {
        <div class="row row-cols-1 row-cols-md-3 g-4">
            @foreach (var meeting in State.Meetings)
            {
                <div class="col">
                    <div class="card h-100">
                        <div class="card-body">
                            <h5 class="card-title">@meeting.Subject</h5>
                            <p class="card-text">
                                <small class="text-muted">@meeting.Players.Count player(s)</small>
                            </p>
                        </div>
                        <div class="card-footer">
                            <div class="d-flex justify-content-between">
                                <button class="btn btn-sm btn-primary" @onclick="() => JoinMeeting(meeting.Id)">Join</button>
                                <button class="btn btn-sm btn-primary" @onclick="() => NavigateToMeeting(meeting.Id)">Edit</button>
                                @if (meeting.OwnerId == CurrentUser.Id)
                                {
                                    <button class="btn btn-sm btn-outline-danger" @onclick="() => DeleteMeeting(meeting.Id)">Delete</button>
                                }
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    }
</div>

@if (State!.ShowCreateDialog)
{
    <div class="modal fade show" style="display: block;" tabindex="-1">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Create New Meeting</h5>
                    <button type="button" class="btn-close" @onclick="CloseCreateMeetingDialog"></button>
                </div>
                <div class="modal-body">
    <div class="mb-3">
        <label for="meetingName" class="form-label">Meeting Subject</label>
        <input type="text" class="form-control" id="meetingName" @bind="State!.NewMeetingSubject" />
        @if (!string.IsNullOrEmpty(State!.MeetingSubjectError))
        {
            <div class="text-danger mt-1">@State!.MeetingSubjectError</div>
        }
    </div>
    <div class="mb-3">
        <label for="adventureSelect" class="form-label">Adventure</label>
        <select id="adventureSelect" class="form-select" @onchange="OnAdventureChanged">
            <option value="">-- Select an adventure --</option>
            @foreach (var adv in State!.Adventures)
            {
                <option value="@adv.Id" selected="@(adv.Id == State!.SelectedAdventureId)">@adv.Name</option>
            }
        </select>
    </div>
    @if (State!.Episodes.Count == 0)
    {
        <div class="mb-3">
            <label for="episodeSelect" class="form-label">Initial Episode</label>
            <select id="episodeSelect" class="form-select" @bind="State!.SelectedEpisodeId">
                <option value="">-- Select an episode --</option>
                @foreach (var ep in State!.Episodes)
                {
                    <option value="@ep.Id">@ep.Name</option>
                }
            </select>
            @if (State!.ShowEpisodeError)
            {
                <div class="text-danger mt-1">Episode selection is required</div>
            }
        </div>
    }
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" @onclick="CloseCreateMeetingDialog">Cancel</button>
                    <button type="button" class="btn btn-primary" @onclick="CreateMeeting">Create</button>
                </div>
            </div>
        </div>
    </div>
    <div class="modal-backdrop fade show"></div>
}
