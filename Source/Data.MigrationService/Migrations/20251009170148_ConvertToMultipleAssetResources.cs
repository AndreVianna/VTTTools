// <auto-generated />
#nullable disable

namespace VttTools.Data.MigrationService.Migrations;
/// <inheritdoc />
public partial class ConvertToMultipleAssetResources : Migration {
    /// <inheritdoc />
    protected override void Up(MigrationBuilder migrationBuilder) {
        // Step 1: Add new Resources JSON column
        migrationBuilder.AddColumn<string>(
            name: "Resources",
            table: "Assets",
            type: "nvarchar(max)",
            nullable: true);

        // Step 2: Migrate existing ResourceId data to Resources JSON
        // For each asset with a ResourceId, create a JSON array with one AssetResource entry
        // Role = 3 means Token | Portrait (both flags set)
        migrationBuilder.Sql("""
            UPDATE Assets
            SET Resources = '[{"ResourceId":"' + CAST(ResourceId AS NVARCHAR(36)) + '","Role":3,"IsDefault":true}]'
            WHERE ResourceId IS NOT NULL
            """);

        // Step 3: Drop the old ResourceId column and FK
        migrationBuilder.DropForeignKey(
            name: "FK_Assets_Resources_ResourceId",
            table: "Assets");

        migrationBuilder.DropIndex(
            name: "IX_Assets_ResourceId",
            table: "Assets");

        migrationBuilder.DropColumn(
            name: "ResourceId",
            table: "Assets");

        // Step 4: Update SceneAssets.ResourceId to be required (non-nullable)
        // For SceneAssets with null ResourceId, try to get the first resource from the associated Asset
        // This uses a complex SQL query to extract ResourceId from the Asset's Resources JSON
        migrationBuilder.Sql(@"
                UPDATE sa
                SET sa.ResourceId = CAST(JSON_VALUE(a.Resources, '$[0].ResourceId') AS UNIQUEIDENTIFIER)
                FROM SceneAssets sa
                INNER JOIN Assets a ON sa.AssetId = a.Id
                WHERE sa.ResourceId IS NULL AND a.Resources IS NOT NULL
            ");

        migrationBuilder.AlterColumn<Guid>(
            name: "ResourceId",
            table: "SceneAssets",
            type: "uniqueidentifier",
            nullable: false,
            defaultValue: new Guid("00000000-0000-0000-0000-000000000000"),
            oldClrType: typeof(Guid),
            oldType: "uniqueidentifier",
            oldNullable: true);
    }

    /// <inheritdoc />
    protected override void Down(MigrationBuilder migrationBuilder) {
        migrationBuilder.DropColumn(
            name: "Resources",
            table: "Assets");

        migrationBuilder.AlterColumn<Guid>(
            name: "ResourceId",
            table: "SceneAssets",
            type: "uniqueidentifier",
            nullable: true,
            oldClrType: typeof(Guid),
            oldType: "uniqueidentifier");

        migrationBuilder.AddColumn<Guid>(
            name: "ResourceId",
            table: "Assets",
            type: "uniqueidentifier",
            nullable: true);

        migrationBuilder.CreateIndex(
            name: "IX_Assets_ResourceId",
            table: "Assets",
            column: "ResourceId");

        migrationBuilder.AddForeignKey(
            name: "FK_Assets_Resources_ResourceId",
            table: "Assets",
            column: "ResourceId",
            principalTable: "Resources",
            principalColumn: "Id",
            onDelete: ReferentialAction.Restrict);
    }
}
