{"type":"entity","name":"VTT Tools Project","entityType":"Software Project","observations":["A .NET 9 C# Aspire Solution for Virtual Table Top (VTT) RPG gaming","Provides tools for Dungeon Masters and players to set up and play tabletop role-playing games online","Includes maps, tokens, dice rolling, and chat functionality","Uses Blazor for interactive UI components and WebAssembly for complex canvas-based editing","Recently achieved 100% test success (166/166 tests passing) in WebApp.Server.UnitTests","Architecture includes separate projects for Domain, Data, Common, Assets, Library, Game, Media, WebApp, and WebApp.WebAssembly","LATEST COMPLETED TASK: Comprehensive code cleanup and organization","Scene Builder Architecture Fix and Code Cleanup both completed successfully","Application tested and working as expected by user","Clean, maintainable codebase ready for continued development","All build and formatting issues resolved","Memory updated with current project state for future development sessions"]}
{"type":"entity","name":"Test Success Strategy","entityType":"Development Task","observations":["Successfully completed 100% Test Success Strategy using test-only changes","Fixed 26 failing tests to achieve 166/166 passing tests","Constraint: No source code changes allowed, only test infrastructure improvements","Phase 1: Fixed NavigationManager infrastructure for 11 AdventureHandler tests","Phase 2: Fixed Component Service Registration for 9 AdventurePage tests","Phase 3: Fixed EmailPage AccountOwner issues for 6 EmailPage tests","Used ComponentTestContext inheritance, proper authentication setup, and cascading parameter injection"]}
{"type":"entity","name":"Adventures Page","entityType":"UI Component","observations":["Main interface for managing RPG adventures","Features two-panel layout: 'My Adventures' and 'Public Adventures'","Shows adventure status badges (Draft/Published, Private/Public)","Displays adventure types, scene counts, and action buttons","Includes edit, clone, and delete functionality","Clean table layout with consistent navigation bar","URL: localhost:7001/adventures"]}
{"type":"entity","name":"Scene Builder Page","entityType":"UI Component","observations":["Canvas-based scene editor for creating VTT maps and placing tokens","Displays beautiful dungeon/tavern maps with grid overlay","Supports asset placement (tokens, characters, NPCs, objects)","Has embedded toolbar with Stage, Assets, Structures menus and zoom controls","Uses WebAssembly for performance with TypeScript canvas rendering","Current issue: toolbar is not consistent with main application's navigation bar style","Located in WebApp.WebAssembly project at /scenes/builder/{id:guid}"]}
{"type":"entity","name":"Navigation Consistency Issue","entityType":"UI Problem","observations":["Scene Builder toolbar is embedded within canvas area instead of integrated with main nav","Main app uses Bootstrap navbar with custom gradient styling (purple/blue gradient)","Scene Builder uses separate .scene-builder-toolbar with gray background","Toolbar contains Stage, Assets, Structures dropdowns and zoom controls","Need to move Scene Builder toolbar to match main navigation layout and styling"]}
{"type":"entity","name":"Main Navigation Bar","entityType":"UI Component","observations":["Uses Bootstrap navbar with custom purple-blue gradient background","Contains VTT Tools brand, Library dropdown, user profile, and logout","Styled with .custom-navbar and .custom-dropdown-menu classes","Uses sticky-top positioning and navbar-dark theme","Located in WebApp/Components/NavMenu.razor","Applied through MainLayout.razor to all standard pages"]}
{"type":"entity","name":"Project Structure Changes","entityType":"Architecture Update","observations":["WebApp.Server project has been removed/merged","Components and pages moved from WebApp.Server to WebApp project","WebApp.WebAssembly remains separate for canvas-based Scene Builder","Test projects remain unchanged and functional","Navigation components now in WebApp/Components/NavMenu.razor"]}
{"type":"entity","name":"Scene Builder Navigation Fix Plan","entityType":"Development Plan","observations":["Problem: Scene Builder has embedded toolbar that doesn't match main app's navigation style","Main app uses Bootstrap navbar with purple-blue gradient, Scene Builder uses gray embedded toolbar","Solution: Extend main navigation bar to include Scene Builder-specific menu items dynamically","Phase 1: Modify NavMenu.razor to conditionally show Scene Builder menus (Stage, Assets, Structures, zoom controls)","Phase 2: Remove embedded toolbar from SceneBuilderPage.razor (lines 8-63)","Phase 3: Update CSS - remove .scene-builder-toolbar styles, adjust .builder-layers height","Phase 4: Create communication bridge between WebApp and WebApp.WebAssembly projects for menu actions","Benefits: Visual consistency, familiar UX, single nav component, more canvas space","Technical challenge: Main nav in WebApp project, Scene Builder in WebApp.WebAssembly project","Need JavaScript interop or component parameters for cross-project menu state communication","Build succeeded with 0 warnings and 0 errors","All 166 tests passing - no regressions introduced","Scene Builder toolbar removed from SceneBuilderPage.razor (lines 8-63)","Main navigation conditionally shows Scene Builder menus when on /scenes/builder/ routes","JavaScript interop enables cross-project communication between WebApp and WebApp.WebAssembly","CSS updated - builder canvas now uses full viewport height minus navbar","CORRECTED STATUS: Scene Builder navigation integration is ACTIVE and functional","Navigation menus are currently enabled and working in NavMenu.razor","Scene Builder-specific menus (Stage, Assets, Structures, zoom controls) are live and operational","JavaScript interop bridge is active and handling communication between WebApp and WebApp.WebAssembly","IsSceneBuilderPage property correctly detects /scenes/builder/ routes","Implementation is complete and deployed, not commented out for experiments","Added methods: openChangeImageModal(), openGridSettingsModal(), startAssetPlacement(), closeModal() - uses data attributes for DOM selection","COMPLETED: Change image modal updated with id='change-image-modal' and id='change-image-backdrop'","REMAINING: Update grid-settings and asset-selector modals with IDs","Save button pattern: @onclick=\"@(async () => { await SaveMethod(); SceneBuilder.closeModal('modal-type'); })\"","TASK COMPLETED: TypeScript-driven modal management system implementation","Phase 1 ✅: TypeScript methods added to SceneBuilder.ts (openChangeImageModal, openGridSettingsModal, startAssetPlacement, closeModal)","Phase 2 ✅: Added IDs to all modals - change-image-modal, grid-settings-modal, asset-selector-modal with corresponding backdrop IDs","Phase 3 ✅: Removed C# modal state management - CloseModals() method, State.Show*Modal assignments removed","Phase 4 ✅: Updated NavMenu.razor.cs to call SceneBuilder.* methods instead of global functions","Phase 5 ✅: Compiled TypeScript to generate updated builder.js file","ARCHITECTURE IMPROVEMENT: Eliminated convoluted C# JSInvokable → JavaScript interop chain","NEW FLOW: NavMenu → SceneBuilder.openChangeImageModal() → Direct DOM manipulation","MODAL SAVE PATTERN: @onclick=\"@(async () => { await SaveMethod(); SceneBuilder.closeModal('modal-type'); })\"","FILES MODIFIED: SceneBuilderPage.razor (modal IDs), SceneBuilderPage.razor.cs (removed modal state), NavMenu.razor.cs (updated method calls), builder.js (compiled TypeScript)","BENEFITS: Faster performance, cleaner separation of concerns, better maintainability","BUILD STATUS: Syntax verified correct, WSL NuGet issues unrelated to code changes","1. NavMenu.razor - Updated 11 buttons to use onclick instead of @onclick:","   - Stage dropdown: onclick=\"SceneBuilder.openChangeImageModal()\" and onclick=\"SceneBuilder.openGridSettingsModal()\"","   - Assets dropdown: onclick=\"SceneBuilder.startAssetPlacement('Creature')\" etc. for Creature/Character/NPC/Object","   - Zoom controls: onclick=\"SceneBuilder.setZoom('X')\" for Reset, 'H' for Fit Horizontal, 'V' for Fit Vertical, '+' for Zoom In, '-' for Zoom Out","2. NavMenu.razor.cs - Removed unused C# methods and IJSRuntime injection:","   - Removed: OnChangeImageClicked, OnGridSettingsClicked, OnAssetPlacementClicked, OnResetZoomClicked, OnFitHorizontallyClicked, OnFitVerticallyClicked, OnZoomInClicked, OnZoomOutClicked","   - Removed: [Inject] internal IJSRuntime JsRuntime injection","ARCHITECTURE FLOW NOW: NavMenu (client-side onclick) → SceneBuilder.methodName() → Direct TypeScript DOM manipulation","1. Verify menu buttons now trigger JavaScript methods correctly","2. Test modal opening/closing functionality","3. Test zoom controls functionality","4. Ensure zoom level display updates properly","5. If issues remain, check browser console for JavaScript errors","TECHNICAL CONTEXT:","- NavMenu.razor is in WebApp (Blazor Server) project","- SceneBuilderPage.razor is in WebApp.WebAssembly project","- SceneBuilder TypeScript class exposed globally via window.SceneBuilder","- Client-side onclick handlers work across both Blazor Server and WebAssembly contexts","FILES MODIFIED IN THIS SESSION:","1. SceneBuilder.ts - Added global exposure and initialization","2. tsconfig.json - Removed main.ts reference","3. builder.js - Recompiled with global SceneBuilder exposure","4. NavMenu.razor - Replaced @onclick with onclick handlers","5. NavMenu.razor.cs - Removed C# event handlers and JSRuntime injection","EXPECTED BEHAVIOR AFTER FIX:","- Clicking Stage > Change Image should open change image modal","- Clicking Stage > Set Grid should open grid settings modal","- Clicking Assets > Add Creature/Character/NPC/Object should open asset selector modal","- Clicking zoom buttons should adjust canvas zoom and update zoom display","- All functionality should work regardless of Blazor Server/WebAssembly context"]}
{"type":"entity","name":"VTT Tools Solution","entityType":"Software Solution","observations":["A .NET 9 C# Aspire Solution for Virtual Table Top (VTT) RPG gaming","Solution file: VttTools.sln with 21 projects organized in 4 layers plus tests","Uses microservices architecture with .NET Aspire orchestration","Supports both Blazor Server and WebAssembly rendering modes","Authentication via ASP.NET Core Identity with user roles (GM, Player)","Database: Entity Framework Core with SQL Server","Storage: Local filesystem (Dev) and Azure Blob Storage (Prod) for media files","Build status: Successful with all projects compiling","CORRECTED: Solution contains exactly 22 projects total (12 main projects + 10 test projects)","Main projects: Core, Domain, Common, Data, Assets, Library, Game, Media, WebApp.Common, WebApp, WebApp.WebAssembly, AppHost","Test projects: 10 UnitTests projects (Core, Domain, Common, Data, Assets, Library, Game, Media, WebApp.Common, WebApp)","CURRENT BUILD STATUS: Solution builds successfully with 0 warnings and 0 errors","All 22 projects compile and restore properly","NPM packages updated (90 packages audited, 0 vulnerabilities found)","WebAssembly project generates proper Blazor output","CURRENT STATUS: Code cleanup completed successfully","All 22 projects build successfully with 0 warnings and 0 errors","GlobalUsings.cs consolidation completed across all projects","_Imports.razor consolidation completed for WebApp projects","Code formatting standardized with dotnet format","Solution ready for Phase 3 continuation (Scene Builder grid display implementation)","Next development target: Implement default grid display in Scene Builder canvas"]}
{"type":"entity","name":"Solution Architecture","entityType":"Technical Architecture","observations":["4-Layer Architecture: Common, Storage, Services, WebApp, plus Hosting","Layer 0 - Common: Core utilities, Domain models, Common services","Layer 1 - Storage: Data access, Entity Framework, database schemas","Layer 2 - Services: Business logic APIs (Assets, Library, Game, Media)","Layer 3 - WebApp: User interfaces (Server, WebAssembly, Common)","Layer 4 - Hosting: Aspire AppHost orchestration","Tests: 11 test projects with xUnit v3 framework","Project naming convention: VttTools.{ProjectName}.csproj","EXACT PROJECT COUNT: 22 total projects in VTT Tools solution","12 main projects: Core, Domain, Common, Data, Assets, Library, Game, Media, WebApp.Common, WebApp, WebApp.WebAssembly, AppHost","10 test projects: All main projects except WebApp.WebAssembly and AppHost have corresponding UnitTests projects","5-layer organization: 0 Common (3 projects), 1 Storage (1 project), 2 Services (4 projects), 3 WebApp (3 projects), 4 Hosting (1 project), plus Tests folder"]}
{"type":"entity","name":"Domain Hierarchy","entityType":"Business Model","observations":["Epic → Campaign → Adventure → Scene hierarchy for content organization","Template vs Instance pattern: Templates are reusable, Instances are playable","All entities have: Name, Owner, Visibility (Hidden/Private/Public)","Ownership transfer capabilities for content sharing","Cloning support for template duplication","Meeting system bridges templates to actual gameplay sessions","Player-Character assignment system with flexible control","Asset placement and management within scenes"]}
{"type":"entity","name":"Core Project","entityType":"Infrastructure Project","observations":["VttTools.Core.csproj - Foundation utilities project","Contains Optional<T> monad for PATCH request properties","OptionalConverter and OptionalConverterFactory for JSON serialization","ErrorCollectionExtensions for error handling","GlobalUsings.cs for common namespace imports","Test coverage: VttTools.Core.UnitTests with 4 test files"]}
{"type":"entity","name":"Domain Project","entityType":"Business Logic Project","observations":["VttTools.Domain.csproj - Business domain models and contracts","Contains all API contracts, service contracts, and domain models","Epic, Campaign, Adventure, Scene domain models with full CRUD contracts","Asset management with 19 asset types (Placeholder, Creature, Character, NPC, Object, Wall, Door, Window, Overlay, Elevation, Effect, Sound, Music, Vehicle, Token)","Game session management with chat message types","Identity models for users, roles, claims","StringHelpers utility class","Test coverage: VttTools.Domain.UnitTests with comprehensive model and contract tests"]}
{"type":"entity","name":"Common Project","entityType":"Shared Services Project","observations":["VttTools.Common.csproj - Shared infrastructure services","HealthEndpointsMapper for service health checks","Middleware: LoggedExceptionHandler, UserIdentificationHandler","Extensions for ApplicationBuilder, ClaimsPrincipal, HostApplicationBuilder","ResourceFileHandler utility for file operations","Global using statements for Microsoft.AspNetCore dependencies","Test coverage: VttTools.Common.UnitTests for all components"]}
{"type":"entity","name":"Data Project","entityType":"Data Access Project","observations":["VttTools.Data.csproj - Entity Framework Core data layer","ApplicationDbContext with schema builders for all domain entities","Schema builders: AdventureSchemaBuilder, AssetSchemaBuilder, CampaignSchemaBuilder, EpicSchemaBuilder, GameSessionSchemaBuilder, IdentitySchemaBuilder, SceneSchemaBuilder, ScheduleSchemaBuilder","Entity storage classes: AdventureStorage, AssetStorage, GameSessionStorage, SceneStorage","Database entities in separate folders: Assets/Entities, Game/Entities, Library/Entities","ApplicationDbContextOptions configuration","Migration management with separate migration files","Test coverage: VttTools.Data.UnitTests with storage and context tests"]}
{"type":"entity","name":"Assets Service","entityType":"Microservice Project","observations":["VttTools.Assets.csproj - Asset management microservice","AssetEndpointsMapper for REST API routing","AssetHandlers for HTTP request processing","AssetService for business logic implementation","Cloner utility for asset duplication","Supports CRUD operations for asset templates","File upload capabilities for asset images","Test coverage: VttTools.Assets.UnitTests for endpoints and services"]}
{"type":"entity","name":"Library Service","entityType":"Microservice Project","observations":["VttTools.Library.csproj - Adventure and Scene management microservice","AdventureEndpointsMapper and SceneEndpointsMapper for REST APIs","AdventureHandlers and SceneHandlers for HTTP processing","AdventureService and SceneService for business logic","Cloner utility for template duplication","Scene builder integration with canvas support","CRUD operations for Adventures and Scenes","Test coverage: VttTools.Library.UnitTests for all components"]}
{"type":"entity","name":"Game Service","entityType":"Microservice Project","observations":["VttTools.Game.csproj - Game session and meeting management microservice","GameSessionEndpointsMapper for REST API routing","GameSessionHandlers for HTTP request processing","GameSessionService for business logic implementation","Supports scheduling, RSVP, and calendar integration","Chat system foundation (SignalR planned for Phase 5)","Test coverage: VttTools.Game.UnitTests for endpoints and services"]}
{"type":"entity","name":"Media Service","entityType":"Microservice Project","observations":["VttTools.Media.csproj - File and blob storage management microservice","ResourcesEndpointsMapper for REST API routing","ResourcesHandlers for HTTP request processing","AzureMediaService for blob storage operations","AzureStorageOptions configuration","Handles file uploads for backgrounds, assets, and media","Local filesystem in Dev, Azure Blob Storage in Prod","Test coverage: VttTools.Media.UnitTests for storage operations"]}
{"type":"entity","name":"WebApp Common","entityType":"Shared Web Project","observations":["VttTools.WebApp.Common.csproj - Shared web components and contracts","Base component classes: Component, Page, AccountPage with handlers","HTTP client contracts: IAssetsHttpClient, IAdventuresHttpClient, IGameSessionsHttpClient, ISceneBuilderHttpClient","Data contracts: AdventureDetails, SceneDetails, AssetDetails, GameSessionDetails","Extensions: HttpContextExtensions, NavigationManagerExtensions, UserManagerExtensions","Identity utilities: IIdentityUserAccessor, IdentityUserAccessor","LoggedUser model for authenticated user state","Test coverage: VttTools.WebApp.Common.UnitTests"]}
{"type":"entity","name":"WebApp Main","entityType":"Blazor Server Project","observations":["VttTools.WebApp.csproj - Main Blazor Server application","Components: App.razor (root), Routes.razor, NavMenu.razor with custom styling","HTTP clients: AdventuresHttpClient, AssetsHttpClient, GameSessionsHttpClient with mappers","Identity pages: Login, Register, Profile management, 2FA, Password management","Adventure pages: List view with card/grid toggle, Details view with CRUD","Game pages: Chat interface, Session scheduling","Asset pages: Asset management interface","Layout: MainLayout.razor with purple-blue gradient navbar","Authentication: ASP.NET Core Identity with IdentityRevalidatingAuthenticationStateProvider","Test coverage: VttTools.WebApp.UnitTests with 166 tests (100% success rate)"]}
{"type":"entity","name":"WebApp WebAssembly","entityType":"Blazor WebAssembly Project","observations":["VttTools.WebApp.WebAssembly.csproj - WebAssembly for Scene Builder","Scene Builder: Canvas-based editor with TypeScript rendering","SceneBuilderPage.razor with interactive WebAssembly rendering","Canvas layers: background-layer, grid-layer, assets-layer","State management: BuilderState, SceneBuilderStorageService","Asset management: SelectedAsset, GuidInput, StageInput","Grid calculations and scene calculations utilities","JavaScript interop for canvas operations and zoom controls","Modals: Change image, Grid settings, Asset selector","Navigation consistency fix implemented (currently commented out for experiments)","Test coverage: Integrated with main WebApp tests","Scene Builder Navigation: ACTIVE and integrated with main application","Navigation detection working via IsSceneBuilderPage property","JavaScript interop bridge fully operational with 75-line scene-builder-interop.js","Cross-project communication between WebApp and WebApp.WebAssembly functional","Scene Builder toolbar successfully moved to main navigation bar"]}
{"type":"entity","name":"AppHost","entityType":"Aspire Orchestration Project","observations":["VttTools.AppHost.csproj - .NET Aspire orchestration host","Configures and orchestrates all microservices","Service discovery and resilience configuration","Development and production environment settings","Manages communication between services","Provides unified development experience"]}
{"type":"entity","name":"Epic Entity","entityType":"Domain Entity","observations":["Top-level content organization entity","Owns a collection of Campaigns (one-to-many, non-reusable)","Spans whole worlds or continents in narrative scope","Campaigns within Epic can be independent but share context","Properties: Name, Owner, Visibility (Hidden/Private/Public)","Database entity in VttTools.Data.Library.Entities","Schema builder: EpicSchemaBuilder","Future implementation in Phase 7"]}
{"type":"entity","name":"Campaign Entity","entityType":"Domain Entity","observations":["Second-level content organization entity","Owns a collection of Adventures (one-to-many, non-reusable)","Can be stand-alone (Epic not required)","Involves consistent group of adventurers","Includes main storylines and side quests","Properties: Name, Owner, Visibility, Epic reference (optional)","Database entity in VttTools.Data.Library.Entities","Schema builder: CampaignSchemaBuilder","Future implementation in Phase 7"]}
{"type":"entity","name":"Adventure Entity","entityType":"Domain Entity","observations":["Third-level content organization entity - Currently Implemented","Properties: Name, Type, Description, Background image, IsPublished, IsPublic","Adventure types: Generic, OpenWorld, DungeonCrawl, HackNSlash, Survival, GoalDriven, RandomlyGenerated","Owns collection of Scenes (must have at least one)","Optional Campaign parent relationship","One-shot adventure = Adventure with single Scene","Database entity: VttTools.Data.Library.Entities.Adventure","API contracts: CreateAdventureRequest, UpdateAdventureRequest, CloneAdventureRequest","Service: AdventureService with CRUD operations","UI: Adventure list (card/grid view), Adventure details page","Cloning endpoint: POST /api/adventures/{id}/clone (pending implementation)"]}
{"type":"entity","name":"Scene Entity","entityType":"Domain Entity","observations":["Fourth-level content organization entity - Currently Implemented","Belongs to an Adventure (required relationship)","Template vs Instance pattern: Templates are reusable, Instances are playable","Components: Stage (background media), Assets (tokens/objects), Sound-track (audio)","Stage properties: MapType (None, Square, HexV, HexH, Isometric), Source, Size, Grid","Grid system: Position (Left, Top), Cell size (Width, Height), Snap settings","Database entity: VttTools.Data.Library.Entities.Scene","API contracts: UpdateSceneRequest, AddAssetRequest, UpdateAssetRequest","Service: SceneService with CRUD operations","UI: Scene Builder with canvas-based editing (WebAssembly)","Cloning endpoint: POST /api/scenes/{id}/clone (implemented)"]}
{"type":"entity","name":"Asset Entity","entityType":"Domain Entity","observations":["Asset management system with 19 types","Playable Assets: Creature, Character, NPC (controllable by players/GM)","Static Assets: Object, Wall, Door, Window, Overlay, Elevation, Effect, Sound, Music, Vehicle, Token (visual/audio enhancements)","Properties: Name, Type, Owner, Visibility, Display settings, Source (file path)","SceneAsset: Asset placement within scenes with position, size, rotation, elevation","Database entity: VttTools.Data.Assets.Entities.Asset","API contracts: CreateAssetRequest, UpdateAssetRequest, CloneAssetRequest","Service: AssetService with CRUD operations","File upload support for asset images","Pending: Blob storage integration, ownership transfer"]}
{"type":"entity","name":"User Entity","entityType":"Identity Entity","observations":["ASP.NET Core Identity implementation","User roles: Game Master (GM), Player","Properties: Id, UserName, Email, EmailConfirmed, DisplayName","Related entities: UserClaim, UserLogin, UserRole, UserToken","Authentication: Login, Register, 2FA, Password management","Profile management with email confirmation","External login support (configurable)","Database entities in VttTools.Data with IdentitySchemaBuilder","Services: UserManager, SignInManager integration"]}
{"type":"entity","name":"GameSession Entity","entityType":"Domain Entity","observations":["Meeting/GameSession represents actual gameplay sessions","Game-related properties: Associated Scene instance, Player assignments to assets, Chat and event capture","Calendar-like properties: Scheduled date/time, Duration, Participants, RSVP support","Can be pre-scheduled, repeatable (weekly/bi-weekly/monthly), or impromptu","Can be cancelled, rescheduled, with reminders and notes","Functions as organizational unit bridging game world and real-world scheduling","Database entity: VttTools.Data.Game.Entities.GameSession","API contracts: CreateGameSessionRequest, UpdateGameSessionRequest, JoinGameSessionRequest","Service: GameSessionService","Future: Full implementation in Phase 7"]}
{"type":"entity","name":"Chat System","entityType":"Feature Component","observations":["Primary interaction method for meeting participants","9 Message Types: Normal Messages, Whispers (private), Language-Specific, Simple Dice Rolls, Action Results, Images/GIFs, Sound Effects, Slash Commands, Stat Blocks/Rules","SignalR for real-time communication (planned Phase 5)","Message persistence and history","Chat interface in Game pages","Future: Voice/video capabilities consideration"]}
{"type":"entity","name":"Scene Builder","entityType":"UI Feature","observations":["Canvas-based scene editor with WebAssembly rendering","Located at /scenes/builder/{id:guid} route","Multi-layer canvas: background-layer, grid-layer, assets-layer","Features: Background image management, Grid configuration, Asset placement, Zoom/pan controls","Modals: Change image, Grid settings, Asset selector, Context menu","JavaScript interop for canvas operations and performance","TypeScript rendering engine in src/ folder","Navigation consistency fix: Toolbar integration with main navbar (implemented but currently commented out)","State management: BuilderState, SceneBuilderStorageService","Canvas calculations: GridCalculations, SceneCalculations utilities"]}
{"type":"entity","name":"Development Phase 1","entityType":"Development Phase","observations":["Status: Completed","Goal: Core Infrastructure and Meeting Management","Tasks completed: User authentication and authorization, Basic user roles (GM, Player)","Foundation for all subsequent development phases","ASP.NET Core Identity implementation with secure authentication"]}
{"type":"entity","name":"Development Phase 2","entityType":"Development Phase","observations":["Status: Mostly Completed","Goal: Basic Game Content Management","Completed tasks: Unit tests for all projects (166 tests, 100% success), Adventure Management API & UI (list, create, rename, delete), Adventure list and details views, Scene Management CRUD API & UI","Pending tasks: Asset template cloning endpoint, File upload to blob storage, Ownership transfer functionality","Current focus: Preparing for Phase 3 transition"]}
{"type":"entity","name":"Development Phase 3","entityType":"Development Phase","observations":["Status: In Progress","Goal: Interactive Scenes and Tokens","Completed tasks: Scene editor UI/UX with WebAssembly canvas, Map background image management, File upload (local FS in Dev, Azure Blob in Prod), Panning with right mouse button, Zoom with mouse wheel","Pending tasks: Default grid display, Token placement (monsters, characters, NPCs, objects), Structure placement (walls, doors, windows), Overlay placement (light, fog-of-war, weather, elevation, effects, sound), Placeholder/trigger placement, Fog of war/visibility systems, Measuring tools","Current implementation: Basic canvas infrastructure ready for token placement","ADDITIONAL COMPLETED: Scene Builder navigation architecture fix","ADDITIONAL COMPLETED: Comprehensive code cleanup and organization","Code formatting, using statement consolidation, and build optimization completed","Scene Builder infrastructure is stable and ready for grid display implementation","Next immediate task: Implement default grid display feature","Current readiness: Canvas infrastructure, navigation integration, and codebase organization all complete"]}
{"type":"entity","name":"Development Phase 4","entityType":"Development Phase","observations":["Status: Planned","Goal: Assets","Tasks: Asset Templates CRUD API & UI, List/edit/create/clone/delete Assets, File upload support via POST /api/assets/{id}/upload, Set Visibility settings, Ownership transfer (deferred)"]}
{"type":"entity","name":"Development Phase 5","entityType":"Development Phase","observations":["Status: Planned","Goal: Chat and Dice Rolling System","Tasks: Real-time chat with SignalR, Normal message support, Whisper functionality, Simple dice rolling engine, Action result formatting, Language-specific messages, Image/GIF sharing, Sound effect triggers, Slash command framework, Stat block/rule display"]}
{"type":"entity","name":"Testing Strategy","entityType":"Quality Assurance","observations":["Framework: xUnit v3 with AwesomeAssertions and NSubstitute","Target: 100% branch coverage requirement (updated from 95%)","Test structure: {ClassBeingTested}Tests with {MethodBeingTested}_{TestedScenario}_{ExpectedOutput} naming","Component testing: ComponentTestContext for Blazor components","Patterns: Arrange-Act-Assert, ClassData for complex test data, FluentAssertions for readable assertions","Infrastructure: Fixed NavigationManager testing, Service registration fixes, Cascading parameter injection","Coverage tools: coverlet.collector, reportgenerator for HTML and JSON reports","Domain.UnitTests has .NET runtime environment issue but tests are comprehensive","Overall solution health: Excellent with robust test coverage","CORRECTED: 10 test projects total (not 11 as previously stated)","Test project breakdown: Core.UnitTests, Domain.UnitTests, Common.UnitTests, Data.UnitTests, Assets.UnitTests, Library.UnitTests, Game.UnitTests, Media.UnitTests, WebApp.Common.UnitTests, WebApp.UnitTests","BUILD VERIFICATION: All test projects compile successfully","10 test projects confirmed: Core.UnitTests, Domain.UnitTests, Common.UnitTests, Data.UnitTests, Assets.UnitTests, Library.UnitTests, Game.UnitTests, Media.UnitTests, WebApp.Common.UnitTests, WebApp.UnitTests","Solution ready for test execution"]}
{"type":"entity","name":"Navigation System","entityType":"UI Component","observations":["Bootstrap navbar with custom purple-blue gradient (.custom-navbar)","Components: NavMenu.razor in WebApp/Components","Features: VTT Tools brand, Library dropdown (Adventures), User profile, Logout","Responsive design with navbar-toggler for mobile","Sticky-top positioning","JavaScript interop: scene-builder-interop.js for cross-project communication","Authentication-aware: Shows different menus for authenticated/unauthenticated users","CURRENT STATUS: Scene Builder integration is active and functional","Conditional Scene Builder menus are enabled and working","JavaScript interop functions are live: triggerChangeImage, triggerGridSettings, triggerAssetPlacement, triggerResetZoom, etc.","ZoomLevelDisplay property functioning with updateZoomLevel callback"]}
{"type":"entity","name":"Adventure Management UI","entityType":"UI Feature","observations":["Adventure List Page: Two-panel layout (My Adventures, Public Adventures)","View modes: Card view with adventure images, List view with status columns","Adventure status: Draft/Published, Private/Public badges","Adventure types: Generic, OpenWorld, DungeonCrawl, HackNSlash, Survival, GoalDriven, RandomlyGenerated","Actions: Create, Clone, Edit, Delete, Start (placeholder)","Adventure Details Page: Unified create/edit/view interface","Form elements: Name, Type, Description, Background image upload, Campaign selection","Scene management: Embedded scene list with create/clone actions","Validation: Change detection for Save/Discard buttons","Navigation: Back button with unsaved changes modal"]}
{"type":"entity","name":"Technology Stack","entityType":"Technical Framework","observations":[".NET 9 with latest C# features and target-typed new expressions","ASP.NET Core with Blazor Server and WebAssembly hybrid","Entity Framework Core with SQL Server database","Azure Blob Storage for production media files","TypeScript for Scene Builder canvas rendering","Bootstrap 5.3.6 for UI framework","Material Symbols for icons","xUnit v3 for testing framework","SignalR for planned real-time features",".NET Aspire for microservices orchestration","Coverlet for code coverage analysis","ReportGenerator for coverage reporting"]}
{"type":"entity","name":"Development Phase 6","entityType":"Development Phase","observations":["Status: Planned","Goal: Game Mechanics and Advanced Features","Tasks: Add character sheet basic integration, Implement initiative tracker, Create simple combat tracker, Add support for dynamic lighting and shadows, Implement Sound-Track management for Scenes, Build dice roll history and favorite rolls system, Create handout/note sharing improvements, Implement macro system for common actions, Add automation tools for common GM tasks"]}
{"type":"entity","name":"Development Phase 7","entityType":"Development Phase","observations":["Status: Planned","Goal: Implement Meeting Support and more Advanced Features","Tasks: Implement basic meeting creation and management, Refactor Session concept to Meeting concept according to PROJECT_DEFINITION.md, Create basic dashboard for viewing active and past meetings, Implement basic player assignment to playable tokens, Add persistent state for game instances across multiple meetings, Create basic Notes system with visibility levels, Set up meeting invitation system with RSVP functionality, Implement calendar integration for scheduling recurring meetings, Implement Epic creation and management, Implement Campaign creation and management, Update the dashboard to viewing and manage the Epic and Campaign templates"]}
{"type":"entity","name":"Development Phase 8","entityType":"Development Phase","observations":["Status: Planned","Goal: Platform Growth and Optimization","Tasks: Create marketplace for community-created templates, Add template sharing and importing, Implement API for extensibility and integration with other tools, Performance optimization for large scenes and complex meetings, Add support for exporting/importing game data, Implement advanced search and filtering for content, Create analytics for game masters to review meeting activity"]}
{"type":"entity","name":"Core.UnitTests","entityType":"Test Project","observations":["VttTools.Core.UnitTests.csproj - Unit tests for Core project","Tests Optional<T> monad functionality","Tests OptionalConverter and OptionalConverterFactory","Tests ErrorCollectionExtensions","xUnit v3 framework with 37 passing tests","Uses AwesomeAssertions and NSubstitute"]}
{"type":"entity","name":"Domain.UnitTests","entityType":"Test Project","observations":["VttTools.Domain.UnitTests.csproj - Unit tests for Domain project","Comprehensive tests for all domain models and contracts","Tests Epic, Campaign, Adventure, Scene domain models","Tests Asset management with all 19 asset types","Tests API contracts and service contracts","Tests Identity models and StringHelpers","xUnit v3 framework with comprehensive coverage"]}
{"type":"entity","name":"Common.UnitTests","entityType":"Test Project","observations":["VttTools.Common.UnitTests.csproj - Unit tests for Common project","Tests HealthEndpointsMapper","Tests middleware components (LoggedExceptionHandler, UserIdentificationHandler)","Tests extension methods for ApplicationBuilder, ClaimsPrincipal, HostApplicationBuilder","18 passing tests with xUnit v3 framework"]}
{"type":"entity","name":"Data.UnitTests","entityType":"Test Project","observations":["VttTools.Data.UnitTests.csproj - Unit tests for Data project","Tests ApplicationDbContext and schema builders","Tests storage classes (AdventureStorage, AssetStorage, GameSessionStorage, SceneStorage)","Tests database entities and ApplicationDbContextOptions","33 passing tests with xUnit v3 framework","Uses in-memory database for testing"]}
{"type":"entity","name":"Assets.UnitTests","entityType":"Test Project","observations":["VttTools.Assets.UnitTests.csproj - Unit tests for Assets service","Tests AssetEndpointsMapper and AssetHandlers","Tests AssetService business logic","Tests asset CRUD operations and file uploads","14 passing tests with xUnit v3 framework"]}
{"type":"entity","name":"Library.UnitTests","entityType":"Test Project","observations":["VttTools.Library.UnitTests.csproj - Unit tests for Library service","Tests AdventureEndpointsMapper and SceneEndpointsMapper","Tests AdventureHandlers and SceneHandlers","Tests AdventureService and SceneService business logic","Tests Cloner utility for template duplication","75 passing tests with xUnit v3 framework"]}
{"type":"entity","name":"Game.UnitTests","entityType":"Test Project","observations":["VttTools.Game.UnitTests.csproj - Unit tests for Game service","Tests GameSessionEndpointsMapper and GameSessionHandlers","Tests GameSessionService business logic","Tests meeting and scheduling functionality","52 passing tests with xUnit v3 framework"]}
{"type":"entity","name":"Media.UnitTests","entityType":"Test Project","observations":["VttTools.Media.UnitTests.csproj - Unit tests for Media service","Tests ResourcesEndpointsMapper and ResourcesHandlers","Tests AzureMediaService for blob storage operations","Tests AzureStorageOptions configuration","6 passing tests with xUnit v3 framework"]}
{"type":"entity","name":"WebApp.Common.UnitTests","entityType":"Test Project","observations":["VttTools.WebApp.Common.UnitTests.csproj - Unit tests for WebApp Common","Tests base component classes and HTTP client contracts","Tests ComponentTestContext for Blazor component testing","5 passing tests with xUnit v3 framework"]}
{"type":"entity","name":"WebApp.UnitTests","entityType":"Test Project","observations":["VttTools.WebApp.UnitTests.csproj - Unit tests for main WebApp","Tests all Blazor pages and components","Tests HTTP clients with mock handlers","Tests Identity pages (Login, Register, Profile management)","Tests Adventure pages, Game pages, Asset pages","166 passing tests with xUnit v3 framework (100% success rate)","Uses ComponentTestContext and authentication testing infrastructure"]}
{"type":"entity","name":"JavaScript Interop Bridge","entityType":"Technical Component","observations":["scene-builder-interop.js file provides communication bridge between WebApp and WebApp.WebAssembly","75 lines of JavaScript code implementing cross-project communication","Functions: registerSceneBuilder, unregisterSceneBuilder, triggerChangeImage, triggerGridSettings, triggerAssetPlacement, triggerResetZoom, triggerFitHorizontally, triggerFitVertically, triggerZoomIn, triggerZoomOut, updateZoomLevel","Enables main navigation to control Scene Builder functionality","Located in /Source/WebApp/wwwroot/scene-builder-interop.js","Used by Scene Builder Navigation Fix implementation","Status: Fully implemented and functional","REPLACEMENT IN PROGRESS: scene-builder-interop.js being replaced with direct TypeScript calls","NEW APPROACH: NavMenu → SceneBuilder.openChangeImageModal() → Direct DOM manipulation","TypeScript methods implemented: registerComponent(), unregisterComponent(), openChangeImageModal(), openGridSettingsModal(), startAssetPlacement(), closeModal()","DOM selectors updated to use: document.querySelector('[data-modal=\"type\"]'), document.getElementById('modal-id')","File modifications in progress: SceneBuilderPage.razor (adding IDs), SceneBuilderPage.razor.cs (removing modal state), NavMenu.razor.cs (updating method calls)"]}
{"type":"entity","name":"Scene Builder Architecture Fix","entityType":"task","observations":["Fixed Scene Builder menu button functionality by replacing Blazor Server @onclick with client-side onclick JavaScript handlers","Issue: NavMenu component (Blazor Server) @onclick events don't work when Scene Builder page runs in WebAssembly context","Solution: Direct NavMenu onclick → SceneBuilder TypeScript methods for modal management","Replaced all @onclick handlers with onclick='SceneBuilder.methodName()' in NavMenu.razor","Removed all C# event handlers and IJSRuntime injection from NavMenu.razor.cs","TypeScript SceneBuilder class exposed globally via window.SceneBuilder for interop access","Modal management now uses direct DOM manipulation in TypeScript without C# involvement","SUCCESS: NavMenu buttons are now working correctly in Scene Builder","User confirmed the fix resolved the Blazor Server/WebAssembly context mismatch issue","All onclick handlers successfully calling SceneBuilder TypeScript methods","Modal management working with direct DOM manipulation approach","FINAL STATUS: Task completed successfully","Resolved Blazor Server/WebAssembly context mismatch issue","Fixed NullReferenceException in ClientNavMenu.User property with proper authentication state handling","User confirmed application builds and works as expected","All Scene Builder navigation functionality is operational","Task concluded with successful implementation and user testing"]}
{"type":"entity","name":"VttTools Project","entityType":"project","observations":["Current status: Continuing from previous session after context compaction","Last fix implemented: Scene Builder menu button onclick functionality","Architecture: .NET 9 C# Aspire Solution with Blazor WebAssembly for Scene Builder","Issue resolved: Blazor Server/WebAssembly context mismatch for menu interactions","WSL Build Issue Fix: When encountering NuGet package resolution failures in WSL environment, run 'dotnet restore' on the whole solution first before building","Build command sequence for WSL: 1) cd Source && dotnet restore VttTools.sln, 2) dotnet build VttTools.sln","This resolves 'Unable to find fallback package folder' errors in WSL environment","NOTE: WSL build errors occur in Claude's environment but not when user runs commands directly from WSL","User confirmed: 'dotnet build VttTools.sln' works without errors from WSL command line","Environment difference: Claude's remote execution vs direct WSL execution","Solution builds successfully - authentication fix for ClientNavMenu is ready for testing"]}
{"type":"entity","name":"Code Cleanup Task","entityType":"Development Task","observations":["COMPLETED: Comprehensive code cleanup and organization task","Phase 1 ✅: Applied dotnet format to standardize code formatting across solution","Phase 2 ✅: Consolidated C# using statements to GlobalUsings.cs files","WebApp.WebAssembly: Added VttTools.WebApp.Common.Models, removed all individual using statements from ClientNavMenu.razor.cs","Common.UnitTests: Added Microsoft.Extensions.Diagnostics.HealthChecks, removed from HealthEndpointsMapperTests.cs","Phase 3 ✅: Consolidated Razor imports to _Imports.razor files","WebApp: Added VttTools.WebApp.Shared.Models, removed from AdventurePage.razor and AdventuresPage.razor","WebApp.WebAssembly: Added VttTools.WebApp.WebAssembly.Components, removed from ClientLayout.razor","Phase 4 ✅: Removed unnecessary code and fixed missing properties","Fixed NavMenu.razor.cs by adding CurrentLocation and GetUrlRelativeToBase() with proper 'new' keywords","Phase 5 ✅: Final validation with successful builds","BUILD STATUS: All key projects build successfully with 0 warnings and 0 errors","Benefits achieved: Consistent formatting, reduced code duplication, cleaner Razor components, maintainable codebase","Ready for continued development with clean, organized code structure"]}
{"type":"relation","from":"VTT Tools Project","to":"Test Success Strategy","relationType":"recently completed"}
{"type":"relation","from":"VTT Tools Project","to":"Adventures Page","relationType":"contains"}
{"type":"relation","from":"VTT Tools Project","to":"Scene Builder Page","relationType":"contains"}
{"type":"relation","from":"VTT Tools Project","to":"Main Navigation Bar","relationType":"uses"}
{"type":"relation","from":"Scene Builder Page","to":"Navigation Consistency Issue","relationType":"has"}
{"type":"relation","from":"Navigation Consistency Issue","to":"Main Navigation Bar","relationType":"should match styling of"}
{"type":"relation","from":"Adventures Page","to":"Main Navigation Bar","relationType":"uses"}
{"type":"relation","from":"Project Structure Changes","to":"VTT Tools Project","relationType":"modified"}
{"type":"relation","from":"Test Success Strategy","to":"Project Structure Changes","relationType":"worked with"}
{"type":"relation","from":"Scene Builder Navigation Fix Plan","to":"Navigation Consistency Issue","relationType":"solves"}
{"type":"relation","from":"Scene Builder Navigation Fix Plan","to":"Scene Builder Page","relationType":"will modify"}
{"type":"relation","from":"Scene Builder Navigation Fix Plan","to":"Main Navigation Bar","relationType":"will extend"}
{"type":"relation","from":"VTT Tools Solution","to":"Solution Architecture","relationType":"implements"}
{"type":"relation","from":"VTT Tools Solution","to":"Domain Hierarchy","relationType":"models"}
{"type":"relation","from":"VTT Tools Solution","to":"Technology Stack","relationType":"uses"}
{"type":"relation","from":"Solution Architecture","to":"Core Project","relationType":"contains"}
{"type":"relation","from":"Solution Architecture","to":"Domain Project","relationType":"contains"}
{"type":"relation","from":"Solution Architecture","to":"Common Project","relationType":"contains"}
{"type":"relation","from":"Solution Architecture","to":"Data Project","relationType":"contains"}
{"type":"relation","from":"Solution Architecture","to":"Assets Service","relationType":"contains"}
{"type":"relation","from":"Solution Architecture","to":"Library Service","relationType":"contains"}
{"type":"relation","from":"Solution Architecture","to":"Game Service","relationType":"contains"}
{"type":"relation","from":"Solution Architecture","to":"Media Service","relationType":"contains"}
{"type":"relation","from":"Solution Architecture","to":"WebApp Common","relationType":"contains"}
{"type":"relation","from":"Solution Architecture","to":"WebApp Main","relationType":"contains"}
{"type":"relation","from":"Solution Architecture","to":"WebApp WebAssembly","relationType":"contains"}
{"type":"relation","from":"Solution Architecture","to":"AppHost","relationType":"contains"}
{"type":"relation","from":"Domain Hierarchy","to":"Epic Entity","relationType":"includes"}
{"type":"relation","from":"Domain Hierarchy","to":"Campaign Entity","relationType":"includes"}
{"type":"relation","from":"Domain Hierarchy","to":"Adventure Entity","relationType":"includes"}
{"type":"relation","from":"Domain Hierarchy","to":"Scene Entity","relationType":"includes"}
{"type":"relation","from":"Domain Hierarchy","to":"Asset Entity","relationType":"includes"}
{"type":"relation","from":"Domain Hierarchy","to":"User Entity","relationType":"includes"}
{"type":"relation","from":"Domain Hierarchy","to":"GameSession Entity","relationType":"includes"}
{"type":"relation","from":"Epic Entity","to":"Campaign Entity","relationType":"owns collection of"}
{"type":"relation","from":"Campaign Entity","to":"Adventure Entity","relationType":"owns collection of"}
{"type":"relation","from":"Adventure Entity","to":"Scene Entity","relationType":"owns collection of"}
{"type":"relation","from":"Scene Entity","to":"Asset Entity","relationType":"contains"}
{"type":"relation","from":"GameSession Entity","to":"Scene Entity","relationType":"uses instance of"}
{"type":"relation","from":"User Entity","to":"Epic Entity","relationType":"owns"}
{"type":"relation","from":"User Entity","to":"Campaign Entity","relationType":"owns"}
{"type":"relation","from":"User Entity","to":"Adventure Entity","relationType":"owns"}
{"type":"relation","from":"User Entity","to":"Scene Entity","relationType":"owns"}
{"type":"relation","from":"User Entity","to":"Asset Entity","relationType":"owns"}
{"type":"relation","from":"WebApp Main","to":"Navigation System","relationType":"implements"}
{"type":"relation","from":"WebApp Main","to":"Adventure Management UI","relationType":"implements"}
{"type":"relation","from":"WebApp WebAssembly","to":"Scene Builder","relationType":"implements"}
{"type":"relation","from":"Scene Builder","to":"Navigation System","relationType":"integrates with"}
{"type":"relation","from":"VTT Tools Solution","to":"Development Phase 1","relationType":"completed"}
{"type":"relation","from":"VTT Tools Solution","to":"Development Phase 2","relationType":"mostly completed"}
{"type":"relation","from":"VTT Tools Solution","to":"Development Phase 3","relationType":"in progress"}
{"type":"relation","from":"Development Phase 3","to":"Scene Builder","relationType":"implements"}
{"type":"relation","from":"VTT Tools Solution","to":"Development Phase 4","relationType":"planned"}
{"type":"relation","from":"VTT Tools Solution","to":"Development Phase 5","relationType":"planned"}
{"type":"relation","from":"Development Phase 5","to":"Chat System","relationType":"will implement"}
{"type":"relation","from":"VTT Tools Solution","to":"Testing Strategy","relationType":"follows"}
{"type":"relation","from":"Data Project","to":"Epic Entity","relationType":"persists"}
{"type":"relation","from":"Data Project","to":"Campaign Entity","relationType":"persists"}
{"type":"relation","from":"Data Project","to":"Adventure Entity","relationType":"persists"}
{"type":"relation","from":"Data Project","to":"Scene Entity","relationType":"persists"}
{"type":"relation","from":"Data Project","to":"Asset Entity","relationType":"persists"}
{"type":"relation","from":"Data Project","to":"User Entity","relationType":"persists"}
{"type":"relation","from":"Data Project","to":"GameSession Entity","relationType":"persists"}
{"type":"relation","from":"Assets Service","to":"Asset Entity","relationType":"manages"}
{"type":"relation","from":"Library Service","to":"Adventure Entity","relationType":"manages"}
{"type":"relation","from":"Library Service","to":"Scene Entity","relationType":"manages"}
{"type":"relation","from":"Game Service","to":"GameSession Entity","relationType":"manages"}
{"type":"relation","from":"Game Service","to":"Chat System","relationType":"will implement"}
{"type":"relation","from":"Media Service","to":"Asset Entity","relationType":"stores files for"}
{"type":"relation","from":"Media Service","to":"Adventure Entity","relationType":"stores files for"}
{"type":"relation","from":"Media Service","to":"Scene Entity","relationType":"stores files for"}
{"type":"relation","from":"VTT Tools Solution","to":"Development Phase 6","relationType":"planned"}
{"type":"relation","from":"VTT Tools Solution","to":"Development Phase 7","relationType":"planned"}
{"type":"relation","from":"VTT Tools Solution","to":"Development Phase 8","relationType":"planned"}
{"type":"relation","from":"Development Phase 6","to":"Chat System","relationType":"will enhance"}
{"type":"relation","from":"Development Phase 7","to":"Epic Entity","relationType":"will implement"}
{"type":"relation","from":"Development Phase 7","to":"Campaign Entity","relationType":"will implement"}
{"type":"relation","from":"Development Phase 7","to":"GameSession Entity","relationType":"will enhance"}
{"type":"relation","from":"Domain Project","to":"Core Project","relationType":"depends on"}
{"type":"relation","from":"Common Project","to":"Core Project","relationType":"depends on"}
{"type":"relation","from":"Data Project","to":"Domain Project","relationType":"depends on"}
{"type":"relation","from":"Data Project","to":"Core Project","relationType":"depends on"}
{"type":"relation","from":"Assets Service","to":"Domain Project","relationType":"depends on"}
{"type":"relation","from":"Assets Service","to":"Data Project","relationType":"depends on"}
{"type":"relation","from":"Assets Service","to":"Common Project","relationType":"depends on"}
{"type":"relation","from":"Library Service","to":"Domain Project","relationType":"depends on"}
{"type":"relation","from":"Library Service","to":"Data Project","relationType":"depends on"}
{"type":"relation","from":"Library Service","to":"Common Project","relationType":"depends on"}
{"type":"relation","from":"Game Service","to":"Domain Project","relationType":"depends on"}
{"type":"relation","from":"Game Service","to":"Data Project","relationType":"depends on"}
{"type":"relation","from":"Game Service","to":"Common Project","relationType":"depends on"}
{"type":"relation","from":"Media Service","to":"Domain Project","relationType":"depends on"}
{"type":"relation","from":"Media Service","to":"Common Project","relationType":"depends on"}
{"type":"relation","from":"WebApp Main","to":"WebApp Common","relationType":"depends on"}
{"type":"relation","from":"WebApp WebAssembly","to":"WebApp Common","relationType":"depends on"}
{"type":"relation","from":"WebApp Main","to":"Assets Service","relationType":"consumes API from"}
{"type":"relation","from":"WebApp Main","to":"Library Service","relationType":"consumes API from"}
{"type":"relation","from":"WebApp Main","to":"Game Service","relationType":"consumes API from"}
{"type":"relation","from":"WebApp Main","to":"Media Service","relationType":"consumes API from"}
{"type":"relation","from":"WebApp WebAssembly","to":"Library Service","relationType":"consumes API from"}
{"type":"relation","from":"WebApp WebAssembly","to":"Media Service","relationType":"consumes API from"}
{"type":"relation","from":"AppHost","to":"Assets Service","relationType":"orchestrates"}
{"type":"relation","from":"AppHost","to":"Library Service","relationType":"orchestrates"}
{"type":"relation","from":"AppHost","to":"Game Service","relationType":"orchestrates"}
{"type":"relation","from":"AppHost","to":"Media Service","relationType":"orchestrates"}
{"type":"relation","from":"AppHost","to":"WebApp Main","relationType":"orchestrates"}
{"type":"relation","from":"Core.UnitTests","to":"Core Project","relationType":"tests"}
{"type":"relation","from":"Domain.UnitTests","to":"Domain Project","relationType":"tests"}
{"type":"relation","from":"Common.UnitTests","to":"Common Project","relationType":"tests"}
{"type":"relation","from":"Data.UnitTests","to":"Data Project","relationType":"tests"}
{"type":"relation","from":"Assets.UnitTests","to":"Assets Service","relationType":"tests"}
{"type":"relation","from":"Library.UnitTests","to":"Library Service","relationType":"tests"}
{"type":"relation","from":"Game.UnitTests","to":"Game Service","relationType":"tests"}
{"type":"relation","from":"Media.UnitTests","to":"Media Service","relationType":"tests"}
{"type":"relation","from":"WebApp.Common.UnitTests","to":"WebApp Common","relationType":"tests"}
{"type":"relation","from":"WebApp.UnitTests","to":"WebApp Main","relationType":"tests"}
{"type":"relation","from":"Testing Strategy","to":"Core.UnitTests","relationType":"governs"}
{"type":"relation","from":"Testing Strategy","to":"Domain.UnitTests","relationType":"governs"}
{"type":"relation","from":"Testing Strategy","to":"Common.UnitTests","relationType":"governs"}
{"type":"relation","from":"Testing Strategy","to":"Data.UnitTests","relationType":"governs"}
{"type":"relation","from":"Testing Strategy","to":"Assets.UnitTests","relationType":"governs"}
{"type":"relation","from":"Testing Strategy","to":"Library.UnitTests","relationType":"governs"}
{"type":"relation","from":"Testing Strategy","to":"Game.UnitTests","relationType":"governs"}
{"type":"relation","from":"Testing Strategy","to":"Media.UnitTests","relationType":"governs"}
{"type":"relation","from":"Testing Strategy","to":"WebApp.Common.UnitTests","relationType":"governs"}
{"type":"relation","from":"Testing Strategy","to":"WebApp.UnitTests","relationType":"governs"}
{"type":"relation","from":"Adventure Management UI","to":"Adventure Entity","relationType":"manages"}
{"type":"relation","from":"Scene Builder","to":"Scene Entity","relationType":"edits"}
{"type":"relation","from":"Navigation System","to":"Adventure Management UI","relationType":"provides navigation for"}
{"type":"relation","from":"Navigation System","to":"Scene Builder","relationType":"provides navigation for"}
{"type":"relation","from":"Scene Builder","to":"Asset Entity","relationType":"places and manages"}
{"type":"relation","from":"Adventure Management UI","to":"Scene Entity","relationType":"lists and manages"}
{"type":"relation","from":"Chat System","to":"User Entity","relationType":"enables communication between"}
{"type":"relation","from":"GameSession Entity","to":"User Entity","relationType":"includes as participants"}
{"type":"relation","from":"Data Project","to":"Technology Stack","relationType":"uses Entity Framework Core from"}
{"type":"relation","from":"WebApp Main","to":"Technology Stack","relationType":"uses Blazor Server from"}
{"type":"relation","from":"WebApp WebAssembly","to":"Technology Stack","relationType":"uses Blazor WebAssembly from"}
{"type":"relation","from":"WebApp WebAssembly","to":"Technology Stack","relationType":"uses TypeScript from"}
{"type":"relation","from":"Core.UnitTests","to":"Technology Stack","relationType":"uses xUnit v3 from"}
{"type":"relation","from":"Domain.UnitTests","to":"Technology Stack","relationType":"uses xUnit v3 from"}
{"type":"relation","from":"Common.UnitTests","to":"Technology Stack","relationType":"uses xUnit v3 from"}
{"type":"relation","from":"Data.UnitTests","to":"Technology Stack","relationType":"uses xUnit v3 from"}
{"type":"relation","from":"Assets.UnitTests","to":"Technology Stack","relationType":"uses xUnit v3 from"}
{"type":"relation","from":"Library.UnitTests","to":"Technology Stack","relationType":"uses xUnit v3 from"}
{"type":"relation","from":"Game.UnitTests","to":"Technology Stack","relationType":"uses xUnit v3 from"}
{"type":"relation","from":"Media.UnitTests","to":"Technology Stack","relationType":"uses xUnit v3 from"}
{"type":"relation","from":"WebApp.Common.UnitTests","to":"Technology Stack","relationType":"uses xUnit v3 from"}
{"type":"relation","from":"WebApp.UnitTests","to":"Technology Stack","relationType":"uses xUnit v3 from"}
{"type":"relation","from":"Media Service","to":"Technology Stack","relationType":"uses Azure Blob Storage from"}
{"type":"relation","from":"WebApp Main","to":"Technology Stack","relationType":"uses Bootstrap from"}
{"type":"relation","from":"WebApp WebAssembly","to":"Technology Stack","relationType":"uses Bootstrap from"}
{"type":"relation","from":"AppHost","to":"Technology Stack","relationType":"uses .NET Aspire from"}
{"type":"relation","from":"Solution Architecture","to":"Testing Strategy","relationType":"enforces"}
{"type":"relation","from":"Solution Architecture","to":"Core.UnitTests","relationType":"includes"}
{"type":"relation","from":"Solution Architecture","to":"Domain.UnitTests","relationType":"includes"}
{"type":"relation","from":"Solution Architecture","to":"Common.UnitTests","relationType":"includes"}
{"type":"relation","from":"Solution Architecture","to":"Data.UnitTests","relationType":"includes"}
{"type":"relation","from":"Solution Architecture","to":"Assets.UnitTests","relationType":"includes"}
{"type":"relation","from":"Solution Architecture","to":"Library.UnitTests","relationType":"includes"}
{"type":"relation","from":"Solution Architecture","to":"Game.UnitTests","relationType":"includes"}
{"type":"relation","from":"Solution Architecture","to":"Media.UnitTests","relationType":"includes"}
{"type":"relation","from":"Solution Architecture","to":"WebApp.Common.UnitTests","relationType":"includes"}
{"type":"relation","from":"Solution Architecture","to":"WebApp.UnitTests","relationType":"includes"}
{"type":"relation","from":"JavaScript Interop Bridge","to":"WebApp Main","relationType":"resides in"}
{"type":"relation","from":"JavaScript Interop Bridge","to":"WebApp WebAssembly","relationType":"communicates with"}
{"type":"relation","from":"Navigation System","to":"JavaScript Interop Bridge","relationType":"uses"}
{"type":"relation","from":"Scene Builder","to":"JavaScript Interop Bridge","relationType":"registers with"}
{"type":"relation","from":"Scene Builder Navigation Fix Plan","to":"JavaScript Interop Bridge","relationType":"implemented"}
{"type":"relation","from":"VTT Tools Project","to":"Code Cleanup Task","relationType":"recently completed"}
{"type":"relation","from":"Code Cleanup Task","to":"VTT Tools Solution","relationType":"organized and cleaned"}
{"type":"relation","from":"Scene Builder Architecture Fix","to":"Code Cleanup Task","relationType":"followed by"}